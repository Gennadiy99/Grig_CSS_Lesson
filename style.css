* {
  box-sizing: border-box;
}
.grid-container {
  border: 1px solid #cf0606;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  /* 
  grid-row-gap: 5px;
  grid-column-gap: 5px;
  grid-gap: 10px; 
  */
  grid-gap: 10px 5px;
  grid-auto-rows: 100px;
  grid-auto-columns: 1fr;
  /*  auto-columns - Нужно для того, что бы при создании колонки в которая не прописана и не указана ее ширина, ей задавалась ширина из auto-columns */
  /* grid-template-columns: 20% 20% 20%; */
  /* grid-template-columns: 1fr 1fr 1fr; */
  /* grid-template-columns: repeat(3, 1fr) */
  /* grid-template-columns: repeat(3, minmax(150px, 1fr)); */
  /* grid-template-columns: repeat(auto-fill, minmax(50px, 1fr)); */
  /* grid-template-columns: repeat(auto-fit, minmax(50px, 1fr)); */

  /* grid-template-rows: 150px 250px 50px; */

  /*  Свойство (grid-template-columns) задает высоту СТРОКЕ, работает не корректно Если уже установленно кажому элементу height */
  grid-auto-flow: column;
}
.item1 {
  grid-column-start: 1;
  /* grid-column-end: 4; */
  grid-column-end: span 3;
  overflow: hidden;
}
.item2 {
  grid-column: 2/4;
  /* сокращенное свойство указывается нач.лин / кон.лин */
  /* можно использовать нач.лин / span */
  /* grid-column: 2/span 2; */
}
.item3 {
  /* grid-row-start: 3;
  grid-row-end: 5; */
  overflow: hidden;
  /* СОКРАЩЕННАЯ ЗАПИСЬ */
  grid-row: 3/5;
}
/* Вопрос, почему используя установку границы для элемента через grid-column: 1/4; Мы получаем Ячейку которую можно полность заполнить текстом.(А текст который не поместится обрезать при помощи "overflow: hidden;") А использу установку границ для элемента grid-row: 3/5; Мы получаем Ячейку "Вертикальную" но текст заполняется только с 1й линии по 2рую (дальше при использовании "overflow: hidden;" текст не распростаняется) Но ведь этоже одна ячейка! НЕЛЬЗЯ проптсывать изначально высоту ячеек*/

/* Оформление элем сетки */
.grid-item {
  padding: 10px;
  /* height: 45px; */
  border: 1px solid #000;
}
.grid-item:nth-child(odd) {
  background-color: #7b7b7b;
}

/* Новая таблица для пробы свойств Самостоятельно! */
.new-container {
  display: grid;
  /* grid-template-columns: repeat(auto-fit, minmax(100px,1fr)); */
  grid-template-columns: repeat(2, minmax(150px, 1fr));
  grid-auto-rows: 100px;
  grid-gap: 10px;
}
.elem {
  padding: 10px;
  border: 1px solid #000;
}
.elem:nth-child(even) {
  background-color: #777;
}
.el2 {
  /* grid-row: 2/5; */
  grid-row: 2 / span 3;
}
/* Следующая тема  */
/* Просто визуальное Оформление  */
.item {
  border: 1px solid #f10909;
}
.item:nth-child(even) {
  background-color: #3b3a3a;
}
.item:nth-child(odd) {
  background-color: #0a0a0a;
}
/* Настройка области */
.item-a {
  grid-area: header;
}
.item-b {
  grid-area: main;
}
.item-c {
  grid-area: sidebar;
}
.item-d {
  grid-area: footer;
}
.container {
  display: grid;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: 150px 350px 40px;
  grid-template-areas:
    "header header header header "
    "main main main sidebar"
    "footer footer footer sidebar";
}
@media (max-width: 500px) {
  .container {
    grid-template-rows: 150px 150px 300px 50px;
    grid-template-areas:
      "header header header header "
      "main main main main"
      "sidebar sidebar sidebar sidebar"
      "footer footer footer footer";
  }
}
/* Самост. созд.грид.конт+элем.area */
.gr-contNew {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 100px 350px 70px;
  grid-template-areas: 
  /* "head main sidebar footer"; */
    "head head head head"
    "main main main sidebar"
    "footer footer footer sidebar";
  grid-auto-rows: 50px;
  grid-gap: 3px;
}
.box-text1 {
  grid-area: head;
}
.box-text2 {
  grid-area: main;
}
.box-text3 {
  grid-area: sidebar;
}
.box-text4 {
  grid-area: footer;
}
/* Визуальные настройки контейнера */
.box {
  padding: 10px;
  border: 1px solid #000;
}
.box:nth-child(even) {
  background-color: #777;
}
.box:nth-child(odd) {
  background-color: #8e4848;
}
@media (max-width: 550px) {
  .gr-contNew {
    grid-template-rows: 100px 350px 200px 100px;
    grid-template-areas:
      "head head head head"
      "main main main main"
      "sidebar sidebar sidebar sidebar"
      "footer footer footer footer";
    /* align-items: start;
    justify-items: start; */
    place-items: center start;
    /* center
      end */
  }
  .box-text3 {
    background-color: #0e8f8d;
    /* text-align: center; */
    font-size: 25px;
    color: wheat;
    padding: 5px;
  }
}
/* Не понятно, почему при указании стилей grid-template-columns: repeat(4, 100px)
колонки НЕ ИМЕЮТ размер в 100px */

/* работа с выравниванием элементов в Сетке */
.align-grid-container {
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(3, 150px);
  grid-template-rows: repeat(3, 150px);
  border: 1px solid red;

  /* позицианирование элементов по Горизонт. */
  /* justify-items: center; */
  /* justify-items: start; */
  /* justify-items: end; */

  /* позицианирование элементов по Вертикали. */
  /* align-items: center; */
  /* align-items: start; */
  /* align-items: end; */

  /* позици. всего контента по Вертикали */
  /* align-content: start; */
  /* align-content: center; */
  /* align-content: end; */
  /* align-content: space-around; */
  align-content: space-between;
  /* align-content: space-evenly; */

  /* позици. всего контента по Гориз. */
  /* justify-content: start; */
  /* justify-content: center; */
  /* justify-content: end; */
  /* justify-content: space-around; */
  justify-content: space-between;
  /* justify-content: space-evenly; */
}
.align-grid-container div {
  padding: 10px;
  border: 1px solid #000;
}
.align-grid-container div:nth-child(even) {
  background-color: #a95d5d;
}
.box-cont1 {
  /* justify-self: start; */
  justify-self: start;
  /* justify-self: end; */
  /* align-self: start; */
  /* align-self: center; */
  align-self: end;
}
.box-cont2 {
  /* justify-self: start; */
  justify-self: center;
  /* justify-self: end; */
  /* align-self: start; */
  align-self: center;
  /* align-self: end; */
}
.box-cont3 {
  /* justify-self: start; */
  justify-self: end;
  /* justify-self: end; */
  align-self: start;
  /* align-self: center; */
  /* align-self: end; */
}
.box-cont4 {
  place-self: start start;
}
.box-cont5 {
  place-self: center center;

}
.box-cont6 {
  place-self: end end;

}
/* 
.box-cont7 {
}
.box-cont8 {
}
.box-cont9 {
} 
*/


